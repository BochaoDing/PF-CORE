<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project   [
<!ENTITY common SYSTEM "common.xml">
]>

<!-- 
Author <a href="mailto:schaatser@powerfolder.com">Jan van Oosterom</a>
Version: $Revision: 1.8 $

Default Target = jar
compiles and generates a signed jar

Setup: use the ant.properties file to setup your local settings.
 - 1 for signing update the location of the keystore in the property KeystoreLocation
 - 2 Password for signing is not checked in cvs ... update property SignPassword

Optional Targets:
clean  - cleans up the working dirs
installer - generates an installer (see Notes)

For creation of the installer:
 1 - Works only on windows systems, install nsis and get the installer scripts from the cvs 
     (note the cvs is old for the installer, we use our own SVN for that now).
 2 - Setup the correct version numbers
 3 - Setup your name it will be included in the jar manifest file
 4 - Make sure to set up the following properties:
     InstallerFilesLocation and InstallerGeneratorProgram
-->
<project name="PowerFolder" default="jar-pro" basedir=".">
	<description>
        Build PowerFolder.jar with ant
    </description>
	<!-- sets the standard DSTAMP, TSTAMP, and TODAY properties according to the default formats: -->
	<tstamp>
		<!--must match the format in AboutDialog2-->
		<format property="BuildDateTime" pattern="MMMM/dd/yyyy hh:mm:ss a, z" />
	</tstamp>

	<!-- Load build-local.properties -->
	<available property="build.local.properties.ok" file="build-local.properties" type="file" />
	<fail unless="build.local.properties.ok">
				File 'build-local.properties' not found. Please create one. Copy the sample file 'build-local.properties.sample' and adapt values to your system configuration
			</fail>
	<property file="build-local.properties" />
	<!-- set global properties for this build -->
	<property name="InstallerScriptName" value="script.nsi" />

	<!-- Source dirs -->
	<property name="src.dir" location="src" />
	<property name="main.src.dir" location="src/main" />
	<property name="jwf.src.dir" location="src/jwf" />
	<property name="jd3lib.src.dir" location="src/jd3lib" />
	<property name="systray.src.dir" location="src/systray" />
	<property name="apacheCommons.src.dir" location="src/commons" />
	<property name="jgoodies.src.dir" location="src/jgoodies" />
	<property name="etc.dir" location="src/etc" />
	<property name="web-resources.dir" location="src/web-resources" />

	<property name="src.test.dir" location="src/test" />

	<!-- Output dirs -->
	<property name="build.dir" location="build" />
	<property name="build.test.dir" location="build/test" />
	<property name="build.reports.dir" location="build/test-reports" />
	<property name="dist.dir" location="dist" />
	<property name="javadoc.dir" location="${dist.dir}/api-docs"/>

	<property name="javadoc.packages" location="de.dal33t" />
	<property name="javadoc.overview" location="${src.main.dir}/overview.html" />

	<!-- TODO Dirs need cleanups -->
	<property name="velocity" location="webinterface/velocity" />
	<property name="junit.lib" location="lib/junit.jar" />
	
	<target name="compile" description="compile the source ">
		<mkdir dir="${build.dir}" />

		<javac destdir="${build.dir}"
			source="1.5"
			encoding="UTF-8"
			nowarn="${NoCompileWarnings}"
			debug="${Debug}"
			deprecation="${Deprecation}"
			optimize="${Optimize}">

			<!-- javac 1.5 specific warnings -->
			<compilerarg value="-Xlint:${Unchecked}" />
			<compilerarg value="-Xlint:${Fallthrough}" />

			<classpath>
				<pathelement path="${velocity}" />
			</classpath>

			<src path="${main.src.dir}" />
			<src path="${jwf.src.dir}" />
			<src path="${systray.src.dir}" />
			<src path="${jd3lib.src.dir}" />
			<src path="${apacheCommons.src.dir}" />
			<src path="${jgoodies.src.dir}" />
		</javac>

		<!-- copy files from etc to include in jar -->
		<copy todir="${build.dir}">
			<fileset dir="${etc.dir}" />
			<fileset file="${main.src.dir}/PowerFolder-LICENSE.txt" />
		</copy>

		<!-- copy images from jgoodies that are needed -->
		<copy todir="${build.dir}\com\jgoodies\looks\common">
			<fileset file="${jgoodies.src.dir}\com\jgoodies\looks\common\shadow.png" />
		</copy>

		<mkdir dir="${build.dir}\com\jgoodies\looks\plastic\icons" />
		<copy todir="${build.dir}\com\jgoodies\looks\plastic\icons">
			<fileset dir="${jgoodies.src.dir}\com\jgoodies\looks\plastic\icons\" />
		</copy>
		<mkdir dir="${build.dir}\com\jgoodies\looks\windows\icons" />

		<copy todir="${build.dir}\com\jgoodies\looks\windows\icons">
			<fileset dir="${jgoodies.src.dir}\com\jgoodies\looks\windows\icons\" />
		</copy>

		<!-- copy velocity class files to include in the jar -->
		<copy todir="${build.dir}">
			<fileset dir="${velocity}">
			</fileset>
		</copy>

		<!-- copy webinterface web-resources files to include in the jar -->
		<copy todir="${build.dir}">
			<fileset dir="${web-resources.dir}" />
		</copy>

	</target>

	<target name="dist-misc">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}" />

		<!-- Copy the licenses dir to include in the destribution -->
		<copy todir="${dist.dir}\LICENSE">
			<fileset dir="${src.dir}">
				<include name="**/*LICENSE*" />
			</fileset>
		</copy>

		<!-- Copy the Release Notes to include in the distribution -->
		<copy todir="${dist.dir}">
			<fileset file="${etc.dir}/ReleaseNotes.txt" />
			<fileset file="${main.src.dir}/PowerFolder-LICENSE.txt" />
		</copy>
	</target>

	<target name="jar-pro" depends="compile, dist-misc" description="Create a signed jar file of the pro-version">
		<!-- Put everything in ${build.dir} into the PowerFolder.jar file -->

		<jar jarfile="${dist.dir}\PowerFolder-Pro.jar" basedir="${build.dir}" update="true">
			<manifest>
				<attribute name="Built-By" value="${BuildBy}" />
				<attribute name="Version" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
				<attribute name="BuildDateTime" value="${BuildDateTime}" />
				<attribute name="Sealed" value="true" />
				<attribute name="Main-Class" value="de.dal33t.powerfolder.PowerFolder" />
			</manifest>
		</jar>

		<signjar jar="${dist.dir}\PowerFolder-Pro.jar" keystore="${KeystoreLocation}" storepass="${SignPassword}" alias="myKey" />
	</target>

	<target name="jar-free" depends="compile, dist-misc" description="Create a signed jar file of the free-version">
		<!-- Put everything in ${build.dir} into the PowerFolder.jar file -->

		<jar jarfile="${dist.dir}/PowerFolder.jar" basedir="${build.dir}" excludes="**/powerfolder/web/*.*,web-resources/**/*,test*/**/*" update="true">

			<manifest>
				<attribute name="Built-By" value="${BuildBy}" />
				<attribute name="Version" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
				<attribute name="BuildDateTime" value="${BuildDateTime}" />
				<attribute name="Sealed" value="true" />
				<attribute name="Main-Class" value="de.dal33t.powerfolder.PowerFolder" />
			</manifest>
		</jar>

		<signjar jar="${dist.dir}\PowerFolder.jar" keystore="${KeystoreLocation}" storepass="${SignPassword}" alias="myKey" />
	</target>

	<!-- generate an installer  -->
	<target name="installer" depends="jar-free" description="Generate the installer for the free-version">
		<copy todir="${InstallerFilesLocation}\files">
			<fileset file="${etc.dir}\ReleaseNotes.txt" />
		</copy>

		<copy todir="${InstallerFilesLocation}\files">
			<fileset file="${dist.dir}\PowerFolder.jar" />
		</copy>

		<!-- "C:\Program Files\NSIS\makensisw.exe" /DAPPVERSION=v0.9.2 /DVER_MAJOR=0 /DVER_MINOR=9 /DVER_REVISION=2 /DVER_BUILD=0 script.nsi -->
		<property name="versionString" value="${MajorVersion}.${MinorVersion}.${RevisionVersion}" />
		<exec dir="${InstallerFilesLocation}" executable="${InstallerGeneratorProgram}">
			<arg value="/DAPPVERSION=v${versionString}" />
			<arg value="/DVER_MAJOR=${MajorVersion}" />
			<arg value="/DVER_MINOR=${MinorVersion}" />
			<arg value="/DVER_REVISION=${RevisionVersion}" />
			<!-- FIXME: maybe add a build number (or date:time) here? -->
			<arg value="/DVER_BUILD=0" />
			<arg value="${InstallerScriptName}" />
		</exec>
	</target>

	<!-- clean the working dirs -->
	<target name="clean" description="clean up">
		<!-- Delete the ${build.dir} and ${dist.dir} directory trees -->
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- Setup for test ******************************************************-->

	<target name="run-tests" depends="compile" description="Runs all JUnit tests">
		<mkdir dir="${build.reports.dir}" />

		<!-- Compile tests -->
		<javac destdir="${build.dir}"
			debug="${Debug}"
			deprecation="false"
			optimize="false"
			failonerror="true"
			encoding="UTF-8">

			<src path="${src.test.dir}" />
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement path="${velocity}" />
				<pathelement location="${junit.lib}" />				
			</classpath>
		</javac>

		<!-- Batchrun all tests -->
		<junit printsummary="yes" haltonfailure="false">
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement path="${velocity}" />
			</classpath>

			<formatter type="plain" />

			<batchtest fork="yes" todir="${build.reports.dir}">
				<fileset dir="${src.test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<!-- API Docs generation -->
	<target name="api-docs" depends="compile"
		description="Creates the API Documentation">
		<javadoc
			sourcepath="${main.src.dir}"
			destdir="${javadoc.dir}"
			access="${javadoc.access}"
			author="true"
			version="true"
			use="true"
			windowtitle="PowerFolder API Documentation"
			Overview="${main.src.dir}/overview.html"
		>
			<classpath>
				<pathelement location="${build.dir}" />
				<pathelement path="${velocity}" />
			</classpath>
			
			<packageset dir="${main.src.dir}" defaultexcludes="yes">
		      <include name="de/dal33t/*/**"/>
		    </packageset>
		
			<doctitle><![CDATA[<h1>PowerFolder API Documentation</h1>]]></doctitle>
			<!-- J2SE API. -->
			<link href="http://java.sun.com/j2se/1.5.0/docs/api" />
		</javadoc>
	</target>
</project>