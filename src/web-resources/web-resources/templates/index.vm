<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html><head>
<title>:: Powerfolder $PowerFolderVersion Webinterface ::</title>
<link rel="stylesheet" href="webinterface.css" type="text/css" />
<script src="ajax.js" type="text/javascript"></script> 
<script src="importxml.js" type="text/javascript"></script> 
<script type="text/javascript">
<!--
//author Jan van Oosterom
//schaatser@PowerFolder.com
var folderID;
var directory;
var folderFileListHttpObj;
var folderDetailsHttpObj;

function setMessage(message) {
	document.getElementById('message').innerHTML = message;
}

function leaveHandler() {
	if (objHttp.readyState==4 || objHttp.readyState=='complete') {
		setMessage(objHttp.responseText);		
		loadFolderList();
	}
}

function leave(name, id) {
	if (confirm('Are you sure you want to leave folder: ' + name + '?')) {
		setMessage('Leaving folder ' + name + '...');
		getPage('/leavefolder?leave=true&ID=' + encodeURIComponent(id), leaveHandler, false);
	}
}

function folderHandler() {
	if (folderFileListHttpObj.readyState==4 || folderFileListHttpObj.readyState=="complete") {
		//alert(folderFileListHttpObj.responseText);
		document.getElementById('folderfilelist').innerHTML = folderFileListHttpObj.responseText;
	}
}

function folderDetailsHandler() {
	if (folderDetailsHttpObj.readyState==4 || folderDetailsHttpObj.readyState=="complete") {
		document.getElementById('folderDetails').innerHTML = folderDetailsHttpObj.responseText;
	}
	
}

function showFolder(id, dir, sortColumn, sortOrder) {
	//alert(id + "\n" + dir + "\n" + sortColumn + "\n" + sortOrder);
	folderID = id;
	directory = dir;
	document.getElementById('folderDetails').innerHTML = 'Loading...';
	document.getElementById('folderfilelist').innerHTML = 'Loading...';		
	folderDetailsHttpObj = getPage('/folderdetails?FolderID=' + encodeURIComponent(id), folderDetailsHandler, false);
	folderFileListHttpObj = getPage('/folder?FolderID=' + encodeURIComponent(folderID) + '&directory='+encodeURIComponent(directory) + '&sortColumn='+sortColumn+ '&sortOrder='+sortOrder, folderHandler, true);
}

function folderListHandler() {
	if (objHttp.readyState==4 || objHttp.readyState=="complete") {		
		var element	= document.getElementById("folderlist");
		element.innerHTML = objHttp.responseText;
	}	
}

function loadFolderList() {
	getPage('folderlist', folderListHandler, true);		
}

function setProfileHandler() {
	if (objHttp.readyState==4 || objHttp.readyState=="complete") {		
		setMessage(objHttp.responseText);
		showFolder(folderID, directory, 'name', 'ascending');
	}	
}

function setProfile() {
	var syncProfileID = document.getElementById("SyncProfileID").value;
	folderID =  document.getElementById("FolderID").value;
	document.getElementById("savesyncbutton").enabled = false;	
	//setFolderDetails('Saving...');
	setMessage("");		
	getPage('/setsyncprofile?SyncProfileID=' + syncProfileID + '&FolderID=' + encodeURIComponent(folderID), setProfileHandler, false);
}

function toggleShow(id) {		
    var element = document.getElementById(id);
	if (element.style.display == "block") {		
		element.style.display= "none";
	} else {
	   element.style.display = "block";
	}
}

function downloadFile(folderID, file) {
	window.open('/download/' +encodeURIComponent(file)+'?folderID=' + encodeURIComponent(folderID),'_blank');
}

function remoteDownloadHandler() {
	if (objHttp.readyState==4 || objHttp.readyState=='complete') {
		setMessage(objHttp.responseText);	
		showFolder(folderID, directory, 'name', 'ascending');
	}
}

function remoteDownloadFile(folderID, file, size, modifiedDateMillis, isDeleted) {
		//var element	= document.getElementById("buttonID");
		//element.enabled=false;
		getPage('/remoteDownload?folderID=' 
			+ encodeURIComponent(folderID) 
			+ '&file=' + encodeURIComponent(file)
			+ '&size=' + size 
			+ '&modifiedDate=' 	+ modifiedDateMillis 
			+ '&isDeleted=' + isDeleted, 
			remoteDownloadHandler, false);
}

function pastepowerfolderlinkHandler() {
	if (objHttp.readyState==4 || objHttp.readyState=='complete') {
		toggleShow('join');
		setMessage('Creating folder...');
		setTimeout('loadFolderList(); setMessage(objHttp.responseText);', 500); //wait with updating give change to create the folder		
	}
}

function pastepowerfolderlink() {
	var pastelink =  document.getElementById("PasteLink").value;	
	var syncProfile =  document.getElementById("SyncProfile").value;		
	getPage('/pastepowerfolderlink?SyncProfile=' +syncProfile + '&pastelink=' + pastelink, pastepowerfolderlinkHandler, false);
}
-->
</script>
</head>
<body onload='loadFolderList()'>
<h1>Powerfolder $PowerFolderVersion Webinterface </h1><br />
<div id="message" class="message"></div>
<table>
<tr><td valign="top"><h2>Currently joined Folders</h2>
	<span id="folderlist">Loading...</span><br/>
	<table border="0">
	<tr>
	<td>
		<a href="#" onclick="toggleShow('join')">Join a folder tool</a>

		<div id="join" class="hidden"><h2>Join a Folder</h2>
			Paste a PowerFolder link below<br />	
			<textarea class="writetext" cols="50" rows="2" name="PasteLink" id="PasteLink"></textarea><br /><br />
			<select class="dropdown" id="SyncProfile" name="SyncProfile" size="1">	
				<option value="1">Manual Download</option>
				<option value="2">Auto download (from friends)</option>
				<option value="3">Auto download (from everyone)</option>
				<option value="4">Synchronize PCs</option>
				<option value="5">Project Work</option>
				<option value="6">Torrent Downloader</option>
				<option value="7">Torrent Releaser</option>	
			</select><br />	
			Folder will be created in the "base folder".<br />
			<br />
			<div class="rightAlign"><input class="smallbutton" type="button" value="Join Folder" onclick="pastepowerfolderlink()"/></div>	
		</div>
	</td>
	</tr>
	</table>
</td><td valign="top">
<div id="folderDetails"></div><br /><br />
<div id="folderfilelist"></div>
</td></tr>
</table>
</body>
</html>